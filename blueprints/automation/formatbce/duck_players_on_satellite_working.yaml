blueprint:
  name: Duck area players volume while assist in progress
  description: >
    Temporarily lowers the volume of media players in the same area when any selected Assist Satellite starts listening, 
    then restores their volume after the interaction ends.
  domain: automation
  input:
    satellites:
      name: Assist Satellites
      description: List of Assist Satellite entities to monitor.
      selector:
        entity:
          domain: assist_satellite
          multiple: true

    duck_volume:
      name: Duck Volume Level
      description: Volume level to set while assist is listening (e.g. 0.2 = 20%).
      default: 0.2
      selector:
        number:
          min: 0
          max: 1
          step: 0.01
          unit_of_measurement: fraction (0â€“1)
          mode: slider

trigger:
  - platform: state
    entity_id: !input satellites
    to: listening

variables:
  v_duck_volume: !input duck_volume
  v_players: >-
    {{ states.media_player
      | selectattr('state', 'equalto', 'playing')
      | selectattr('attributes.volume_level', 'defined')
      | selectattr('entity_id', 'in', area_entities(area_id(trigger.entity_id)))
      | rejectattr('entity_id', 'in', device_entities(device_id(trigger.entity_id)))
      | rejectattr('attributes.active_queue', 'in', device_entities(device_id(trigger.entity_id)))
      | map(attribute='entity_id')
      | list
    }}
  v_volumes: >-
    {% set vol = namespace(umes = []) %}
    {% for i in v_players %}
      {% set vol.umes = vol.umes + [{'id': i, 'volume_diff': state_attr(i, 'volume_level') - v_duck_volume }] %}
    {% endfor %}
    {{ vol.umes }}

action:
  - service: media_player.volume_set
    data:
      volume_level: "{{ v_duck_volume }}"
    target:
      entity_id: "{{ v_players }}"
  - wait_for_trigger:
      - platform: template
        value_template: "{{ is_state(trigger.entity_id, 'idle') }}"
    timeout: "00:03:00"
  - repeat:
      for_each: "{{ v_volumes }}"
      sequence:
        - service: media_player.volume_set
          data:
            volume_level: >-
              {{ state_attr(repeat.item.id, 'volume_level') + repeat.item.volume_diff }}
          target:
            entity_id: "{{ repeat.item.id }}"

mode: parallel
max: 10
